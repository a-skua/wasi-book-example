package wasi:sockets@0.2.0;

interface network {
    resource network;

    enum error-code {
        unknown,
        access-denied,
        not-supported,
        invalid-argument,
        out-of-memory,
        timeout,
        concurrency-conflict,
        not-in-progress,
        would-block,
        invalid-state,
        new-socket-limit,
        address-not-bindable,
        address-in-use,
        remote-unreachable,
        connection-refused,
        connection-reset,
        connection-aborted,
        datagram-too-large,
        name-unresolvable,
        temporary-resolver-failure,
        permanent-resolver-failure,
    }

    enum ip-address-family {
        ipv4,
        ipv6,
    }

    type ipv4-address = tuple<u8, u8, u8, u8>;
    type ipv6-address = tuple<u16, u16, u16, u16, u16, u16, u16, u16>;

    variant ip-address {
        ipv4(ipv4-address),
        ipv6(ipv6-address),
    }

    record ipv4-socket-address {
        port: u16,
        address: ipv4-address,
    }

    record ipv6-socket-address {
        port: u16,
        flow-info: u32,
        address: ipv6-address,
        scope-id: u32,
    }

    variant ip-socket-address {
        ipv4(ipv4-socket-address),
        ipv6(ipv6-socket-address),
    }

}
